<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hoperun.pagoda.demo.mapper.GroupMapper">
     <select id="findAllGroup" resultType="hoperun.pagoda.demo.entity.Group">
        SELECT groupId,groupname,customerId,server,serverUser,serverPassword,description,notesDBPath,exportResultPath from tb_group;
    </select>
     <select id="findGroupCount" resultType="java.lang.Integer">
        SELECT count(*) from tb_group;
    </select>
    <select id="findByName" resultType="hoperun.pagoda.demo.entity.Group">
        SELECT groupId,groupname,customerId,server,serverUser,serverPassword,description,notesDBPath,exportResultPath from tb_group where groupname =#{name};
    </select>
     <select id="findById" resultType="hoperun.pagoda.demo.entity.Group">
        SELECT groupId,groupname,customerId,server,serverUser,serverPassword,description,notesDBPath,exportResultPath from tb_group where groupId =#{groupId};
    </select>
    <insert id="insert" parameterType="hoperun.pagoda.demo.entity.Group" useGeneratedKeys="true" keyProperty="groupId">
        insert into tb_group (groupname, customerId,server,serverUser,serverPassword,description,notesDBPath,exportResultPath) VALUES 
        (#{groupname}, #{customerId}, #{server}, #{serverUser}, #{serverPassword}, #{description},#{notesDBPath},#{exportResultPath});
    </insert>
     <update id="update" parameterType="hoperun.pagoda.demo.entity.Group">
        update tb_group 
        set customerId=#{customerId}, server=#{server}, serverUser=#{serverUser}, serverPassword=#{serverPassword}, description=#{description},notesDBPath=#{notesDBPath},exportResultPath=#{exportResultPath}
        where groupId =#{groupId};
    </update>
    
    <delete id="delete">
        delete from tb_group where groupId =#{id}
    </delete>

    <delete id="batchDelete" parameterType="java.util.List">
        delete from tb_group where 1=2
        <if test="groups!=null and groups.size()>0">
            or groupId in
            <foreach collection="groups" item="groupId" index="index"
                open="(" close=")" separator=",">
                 #{groupId}
            </foreach>
        </if>
    </delete>
    
    <select id="findCustomersByGroupId" resultType="int">
        SELECT customerId from tb_group where groupId =#{groupId};
    </select>
    
     <select id="findCustomersByGroupIds" resultType="int">
        select customerId from tb_group where 1=2
        <if test="groupIds!=null and groupIds.size()>0">
            or groupId in
            <foreach collection="groupIds" item="groupId" index="index"
                open="(" close=")" separator=",">
                 #{groupId}
            </foreach>
        </if>
    </select>
    
   <update id="updateGroupCustomer" parameterType="java.util.List">
        update tb_group set customerId=null where 1=2
        <if test="customers!=null and customers.size()>0">
            or customerId in
            <foreach collection="customers" item="customerId" index="index"
                open="(" close=")" separator=",">
                 #{customerId}
            </foreach>
        </if>
   </update>
</mapper>