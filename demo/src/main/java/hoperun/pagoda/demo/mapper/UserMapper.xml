<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hoperun.pagoda.demo.mapper.UserMapper">
	<!-- *******************user table start********************************** -->
	<select id="findAllUser"
		resultType="hoperun.pagoda.demo.entity.UserDetail">
		select * from tb_user;
	</select>
	<select id="findByUsername"
		resultType="hoperun.pagoda.demo.entity.UserDetail">
		SELECT * from tb_user where username = #{username};
	</select>
	<select id="findByUserId"
		resultType="hoperun.pagoda.demo.entity.UserDetail">
		SELECT * from tb_user where userId = #{userId};
	</select>
	<insert id="insert"
		 parameterType="hoperun.pagoda.demo.entity.UserDetail"
		 useGeneratedKeys="true" keyProperty="userId">
		insert into tb_user (username,
		password,email,jobTitle,status,photo,superuser) VALUES
		(#{username}, #{password}, #{email}, #{jobTitle},#{status},#{photo},#{superuser});
	</insert>

	<update id="update"
		parameterType="hoperun.pagoda.demo.bean.UserRequest">
		update tb_user set email=#{email}, jobTitle=#{jobTitle} where
		username=#{username};
	</update>

	<delete id="delete">
		delete from tb_user where userId =#{userId}
	</delete>

	<delete id="deleteUsers" parameterType="java.util.List">
		delete from tb_user where 1=2
		<if test="users!=null and users.size()>0">
			or userId in
			<foreach collection="users" item="userId" index="index"
				open="(" close=")" separator=",">
				 #{userId}
			</foreach>
		</if>
	</delete>

	<update id="updateUserStatus">
		update tb_user set status =#{status} where userId= #{userId};
	</update>
	<update id="updateUserPassword">
		update tb_user set password =#{password} where userId= #{userId};
	</update>
	<!-- *******************user table end********************************** -->
	
	<!-- *******************user_role table start*************************** -->
	<insert id="insertUserGroup">
		insert into tb_user_role (userId, groupId,roleId) VALUES (#{userId},
		#{groupId}, #{roleId});
	</insert>
	<update id="updateUserGroup">
		update tb_user_role set roleId =#{roleId} where userId= #{userId} and
		groupId = #{groupId};
	</update>
	<delete id="deleteUserGroupByUserIdAndGroups">
		delete from tb_user_role where userId= #{userId} and groupId in
			<foreach collection="deleteGroup" item="groupId" index="index"
				open="(" close=")" separator=",">
				#{groupId}
			</foreach>
	</delete>
	<delete id="deleteUserGroupByUserIds" parameterType="java.util.List">
		delete from tb_user_role where 1=2
		<if test="users!=null and users.size()>0">
            or userId in
            <foreach collection="users" item="userId" index="index"
                open="(" close=")" separator=",">
                 #{userId}
            </foreach>
        </if>
	</delete>
	<select id="findUserGroups"
		resultType="hoperun.pagoda.demo.entity.UserGroup">
		select groupId,roleId from tb_user_role where userId = #{userId} ;
	</select>
	<select id="findUsersByGroupId" resultType="Integer">
		select userId from tb_user_role where groupId = #{groupId} ;
	</select>
	<select id="findUserGroupByUserIdAndGroupId"
		resultType="hoperun.pagoda.demo.entity.UserGroup">
		select * from tb_user_role where userId=#{userId} and groupId =
		#{groupId} ;
	</select>
	<select id="findUserGroupByGroupIds" resultType="Integer">
		select groupId from tb_user_role where userId=#{userId}
		<if test="groupIds!=null and groupIds.size()>0">
			 and groupId not in
			<foreach collection="groupIds" item="groupId" index="index"
				open="(" close=")" separator=",">
				#{groupId}
			</foreach>
	   </if>
	</select>
	
	   <delete id="deleteUserGroupByGroupIds" parameterType="java.util.List">
        delete from tb_user_role where 1=2
        <if test="groups!=null and groups.size()>0">
            or groupId in
            <foreach collection="groups" item="groupId" index="index"
                open="(" close=")" separator=",">
                 #{groupId}
            </foreach>
        </if>
    </delete>
	<!-- *******************user_role table end*************************** -->
	
</mapper>